#include <iostream>
#include <string>
#include "Vector.h"
#include "Student.h"
#include "Person.h"
using namespace std;

//деструктор
Vector::~Vector(void)
{
    if (beg != 0)delete[] beg;
    beg = 0;
}
//конструктор с параметрами
Vector::Vector(int n)
{
    beg = new Object * [n];
    cur = 0;
    size = n;
}
//добавление объекта, на который указывает указатель p в вектор
void Vector::Add()
{
    Object* p;
    //выбор из объектов двух возможных классов
    cout << "1.Person" << endl;
    cout << "2.Student" << endl;
    int y;
    cin >> y;
    if (y == 1)//добавление объекта класса Car
    {
        Person* a = new (Person);
        a->Input();//ввод значений атрибутов
        p = a;

        if (cur < size)
        {
            beg[cur] = p;//добавление в вектор
            cur++;
        }
    }
    else
        if (y == 2) //добавление объекта класса Lorry
        {
            Student* b = new Student;
            b->Input();
            p = b;
            if (cur < size)
            {
                beg[cur] = p;
                cur++;
            }
        }
        else return;


}
//просмотр вектора
void Vector::Show()
{
    if (cur == 0) cout << "Empty" << endl;
    Object** p = beg;//указатель на указатель типа Object
    for (int i = 0;i < cur;i++)
    {
        (*p)->Show();//вызов метода Show() (позднее связывание)
        p++;//передвигаем указатель на следующий объект
    }


}
//операция, которая возвращает размер вектора
int Vector::operator ()()
{
    return cur;
}
//удаление элемента из вектора, память не освобождается!
void Vector::Del()
{
    if (cur == 0)return;//пустой
    cur--;
}

